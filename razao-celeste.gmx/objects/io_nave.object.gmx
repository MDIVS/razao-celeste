<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview = 0;
view_yview = 0;
view_wview = DW;
view_hview = DH;

image_alpha = 0;
To = -1;

N = instance_create(DW/2,DH/2,obj_pmg);
N.image_alpha = 0;
N.image_xscale = 0;
N.image_yscale = 0;
N.image_angle = 0;
N.direction = 0;

Eqs[0,0] = 0;
Eqs[0,1] = spr_fuzil;
Eqs[0,2] = "Arma de disparo de sólidos, dano médio, mirar manualmente almenta a frequência de disparos em 100%";
Eqs[0,3] = 5;
Eqs[0,4] = ascr_fuzil;

Eqs[1,0] = 0;
Eqs[1,1] = spr_laser;
Eqs[1,2] = "Arma de disparo de fótons, dano baixo, atinge o alvo com precisão";
Eqs[1,3] = 10;
Eqs[1,4] = ascr_laser;

Eqs[2,0] = 0;
Eqs[2,1] = spr_shield;
Eqs[2,2] = "Gera ondas magnéticas que bloqueiam projéteis inimigos antes que alcancem a espaçonave##*Não funciona com lasers";
Eqs[2,3] = 50;
Eqs[2,4] = ascr_shield;

Drag = -1; //draging
Drop = 0;

BBack[0] = DW/2;
BBack[1] = DH-48;
BBack[2] = 0;

ini_open("Salvo.ini");
Astrocoins = ini_read_real("OBA","Astrocoins",0);
Hand[0] = !ini_read_real("Conq","Primeira Arma",0);
Hand[1] = 0; //x
Hand[2] = 0; //y
Hand[3] = 0; //alpha
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("Salvo.ini");
Astrocoins = ini_read_real("OBA","Astrocoins",0);
ini_close();

if Hand[0] {
    var x1 = DW/2+lengthdir_x(DW/2-96,340);
    var x2 = N.x;
    var y1 = DH/2+lengthdir_y(DH/2-96,340);
    var y2 = N.y;
    var t = sqr((image_index mod 150)/150);
    Hand[1] = x1*(1-t)+x2*t;
    Hand[2] = y1*(1-t)+y2*t;
    Hand[3] = min(t*10,1)-(t-.9)*10*(t&gt;.9);
}

if N!=-1 {
    var w = DW*.5, h = DH-160;
    N.image_xscale = min(w/sprite_get_width(N.sprite_index),h/sprite_get_height(N.sprite_index));
    N.image_yscale = N.image_xscale;
    N.image_alpha = image_alpha/2;
} else {
    //choose spaceship code block
}

var mx = device_mouse_x_to_gui(0);
var my = device_mouse_y_to_gui(0);
var mj = device_mouse_check_button_pressed(0,mb_left);
var mk = device_mouse_check_button(0,mb_left);

if Drag!=-1 {
    Drop = position_meeting(mx,my,N);
    if !mk {
        if Drop {
            if Astrocoins &gt;= Eqs[Drag,3] {
                PlaySom(sound4,0,VSom,0);
                var dis = point_distance(N.x,N.y,mx,my)/N.image_xscale, dir = N.image_angle+point_direction(N.x,N.y,mx,my);
                
                ini_open("Salvo.ini");
                var n = array_length_1d(N.Weap);
                if !is_array(N.Weap[0]) n = 0;
                ini_write_real("OBA","Astrocoins",Astrocoins-5);
                ini_write_real(N.Nome,"Weapons",n+1);
                ini_write_real(N.Nome,"Weapdis"+string(n),dis);
                ini_write_real(N.Nome,"Weapdir"+string(n),dir);
                ini_write_real(N.Nome,"Weapscr"+string(n),Eqs[Drag,4]);
                
                add_weapon(N.Weap,dis,dir,dir,Eqs[Drag,4],obj_nvinimigo);
                
                if !ini_read_real("Conq","Primeira Arma",0) {
                    ini_write_real("Conq","Primeira Arma",1);
                    Hand[0] = 0;
                    popup_create("Primeira Arma",spr_minitrofeu);
                };
                ini_close();
            } else popup_create("Você não possui Astrocoins suficientes");
        }
        Drop = 0;
        Drag=-1;
    }
}

if BBack[2] {
    BBack[2] = mk&amp;&amp;point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32);
    if !mk {instance_create(0,0,io_menu);To=scr_to;PlaySom(sound1,0,VSom,0)}}

if image_alpha == 1 &amp;&amp; mj {
    if N!=-1 {
        for (i=0; i&lt;3; i++) {
            xx = DW/2+lengthdir_x(DW/2-96,340+20*i);
            yy = DH/2+lengthdir_y(DH/2-96,340+20*i);
            if point_in_circle(mx,my,xx,yy,48) Drag = i;
        }
    }
    if point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32) BBack[2] = 1;
}

image_alpha = min(image_alpha+.033,1);
if To!=-1 {
    image_alpha = max(0,image_alpha-.066);
    if image_alpha == 0 {
        instance_destroy();
        with N instance_destroy();
        script_execute(To);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha);

if N!=-1 {
    with N {
        draw_self();
        if !is_array(Weap[0]) continue;
        var i, spr, dis, dir, xx, yy;
        for (i=0; i&lt;array_length_1d(Weap); i++) {
            var dba = Weap[i];
            dis=dba[1]*image_xscale; dir=image_angle+dba[2]; xx=x+lengthdir_x(dis,dir); yy=y+lengthdir_y(dis,dir);
            draw_sprite_ext(weapon_get_sprite(dba[0]),0,xx,yy,image_xscale,image_yscale,image_angle+dba[3],-1,other.image_alpha);
        }
    }
    
    for (i=0; i&lt;3; i++) {
        xx = DW/2+lengthdir_x(DW/2-96,340+20*i);
        yy = DH/2+lengthdir_y(DH/2-96,340+20*i);
        draw_sprite_ext(Eqs[i,1],0,xx,yy,1-(Drag==i)/3,1-(Drag==i)/3,0,-1,image_alpha);
        if Drag==i {
            draw_sprite_ext(Eqs[i,1],0,device_mouse_x(0),device_mouse_y(0),1-Drop/2,1-Drop/2,0,-1,.5+Drop/2);
            if Drop {
                if Astrocoins &gt;= Eqs[i,3] draw_set_colour(16743936) else draw_set_colour(c_orange);
                draw_set_font(algerian48);
                dra_imgtxtsource(spr_astrocoin,0,device_mouse_x(0),device_mouse_y(0)-48,-Eqs[i,3],24);
                draw_set_font(arialbold12);
                draw_set_colour(c_white);
            }
        }
    }
    
    if Hand[0] draw_sprite_ext(spr_hand,0,Hand[1],Hand[2],1,1,0,-1,Hand[3]);
} else {
    //choose spaceship draw code block
}

draw_sprite_ext(spr_home,0,BBack[0],BBack[1],1+BBack[2]/5,1+BBack[2]/5,0,-1,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
