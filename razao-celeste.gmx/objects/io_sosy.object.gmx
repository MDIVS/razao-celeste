<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
To = -1;

BSol[0] = DW/2;
BSol[1] = DH/2;
BSol[2] = 0;

BTel[2] = 0;
BTel[3] = irandom(360);
BTel[0] = BSol[0]+lengthdir_x(BTel[2],BTel[3]);
BTel[1] = BSol[1]+lengthdir_y(BTel[2],BTel[3]);
BTel[4] = 0;

BAst[2] = 0;
BAst[3] = irandom(360);
BAst[0] = BSol[0]+lengthdir_x(BAst[2],BAst[3]);
BAst[1] = BSol[1]+lengthdir_y(BAst[2],BAst[3]);
BAst[4] = 0;

BGas[2] = 0;
BGas[3] = irandom(360);
BGas[0] = BSol[0]+lengthdir_x(BTel[2],BTel[3]);
BGas[1] = BSol[1]+lengthdir_y(BTel[2],BTel[3]);
BGas[4] = 0;

BOrt[2] = 0;
BOrt[3] = irandom(360);
BOrt[0] = BSol[0]+lengthdir_x(BOrt[2],BOrt[3]);
BOrt[1] = BSol[1]+lengthdir_y(BOrt[2],BOrt[3]);
BOrt[4] = 0;

BBack[0] = DW-64;
BBack[1] = 48;
BBack[2] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BTel[2] = DW*.1-DW*.1*sqr(1-image_alpha);
BTel[3] = 0;
BTel[0] = BSol[0]+lengthdir_x(BTel[2],BTel[3]);
BTel[1] = BSol[1]+lengthdir_y(BTel[2],BTel[3]);

BAst[2] = DW*.2-DW*.2*sqr(1-image_alpha);
BAst[3] = 180;
BAst[0] = BSol[0]+lengthdir_x(BAst[2],BAst[3]);
BAst[1] = BSol[1]+lengthdir_y(BAst[2],BAst[3]);

BGas[2] = DW*.3-DW*.3*sqr(1-image_alpha);
BGas[3] = 0;
BGas[0] = BSol[0]+lengthdir_x(BGas[2],BGas[3]);
BGas[1] = BSol[1]+lengthdir_y(BGas[2],BGas[3]);

BOrt[2] = DW*.4-DW*.4*sqr(1-image_alpha);
BOrt[3] = 180;
BOrt[0] = BSol[0]+lengthdir_x(BOrt[2],BOrt[3]);
BOrt[1] = BSol[1]+lengthdir_y(BOrt[2],BOrt[3]);

var mx = device_mouse_x_to_gui(0);
var my = device_mouse_y_to_gui(0);

if BSol[2] {
    BSol[2] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_circle(mx,my,BSol[0],BSol[1],24);
    if !device_mouse_check_button(0,mb_left) {To=ini_menuSol;PlaySom(sound1,0,VSom,0)}}

if BTel[4] {
    BTel[4] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_circle(mx,my,BTel[0],BTel[1],48);
    if !device_mouse_check_button(0,mb_left) {To=ini_teluricosview;PlaySom(sound1,0,VSom,0)}}

if BAst[4] {
    BAst[4] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_circle(mx,my,BAst[0],BAst[1],48);
    if !device_mouse_check_button(0,mb_left) {To=ini_guicinturao;PlaySom(sound1,0,VSom,0)}}

if BGas[4] {
    BGas[4] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_circle(mx,my,BGas[0],BGas[1],48);
    if !device_mouse_check_button(0,mb_left) {To=ini_gasososview;PlaySom(sound1,0,VSom,0)}}

if BOrt[4] {
    BOrt[4] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_circle(mx,my,BOrt[0],BOrt[1],48);
    if !device_mouse_check_button(0,mb_left) {To=ini_guioort;PlaySom(sound1,0,VSom,0)}}

if BBack[2] {
    BBack[2] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32);
    if !device_mouse_check_button(0,mb_left) {instance_create(0,0,io_menu);To=scr_to;PlaySom(sound1,0,VSom,0)}}

if image_alpha == 1 &amp;&amp; device_mouse_check_button_pressed(0,mb_left) {
    if point_in_circle(mx,my,BSol[0],BSol[1],24) BSol[2] = 1;
    if point_in_circle(mx,my,BTel[0],BTel[1],48) BTel[4] = 1;
    if point_in_circle(mx,my,BAst[0],BAst[1],48) BAst[4] = 1;
    if point_in_circle(mx,my,BGas[0],BGas[1],48) BGas[4] = 1;
    if point_in_circle(mx,my,BOrt[0],BOrt[1],48) BOrt[4] = 1;
    if point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32) BBack[2] = 1;
}

image_alpha = min(image_alpha+.033,1);
if To!=-1 {
    image_alpha = max(0,image_alpha-.066);
    if image_alpha == 0 {
        instance_destroy();
        script_execute(To);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha);
var s = max(DW/1280,DH/1024);
draw_background_ext(bg_CRU,DW/2-640*s,DH/2-512*s,s,s,0,-1,image_alpha);

var i, dis, dir;
for(i=0;i&lt;100;i++){dis=BAst[2]-20+(i mod 20)*2;dir=i*11+BAst[3];draw_sprite_ext(spr_asteroid,0,DW/2+lengthdir_x(dis,dir),DH/2+lengthdir_y(dis,dir),1+BAst[4]/2,1+BAst[4]/2,0,-1,image_alpha)};
for(i=0;i&lt;150;i++){dis=BOrt[2]-20+(i mod 20)*2;dir=i*11+BOrt[3];draw_sprite_ext(spr_asteroid,0,DW/2+lengthdir_x(dis,dir),DH/2+lengthdir_y(dis,dir),1+BOrt[4]/2,1+BOrt[4]/2,0,-1,image_alpha)};

draw_sprite_ext(spr_sol,0,BSol[0],BSol[1],1+BSol[2]/8,1+BSol[2]/8,image_index,-1,image_alpha);
draw_set_colour(8404736);
var r = DW/12;
DrawCircle(BTel[0],BTel[1],56+8*BTel[4],16743936,16743936,image_alpha,image_alpha,24,56+8*BTel[4]);
DrawCircle(BTel[0],BTel[1],56+8*BTel[4],8404736,8404736,image_alpha,image_alpha,24,8+4*BTel[4]);
DrawCircle(BAst[0],BAst[1],64+8*BAst[4],16743936,16743936,image_alpha,image_alpha,24,64+8*BAst[4]);
DrawCircle(BAst[0],BAst[1],64+8*BAst[4],8404736,8404736,image_alpha,image_alpha,24,8+4*BAst[4]);
DrawCircle(BGas[0],BGas[1],56+8*BGas[4],16743936,16743936,image_alpha,image_alpha,24,56+8*BGas[4]);
DrawCircle(BGas[0],BGas[1],56+8*BGas[4],8404736,8404736,image_alpha,image_alpha,24,8+4*BGas[4]);
DrawCircle(BOrt[0],BOrt[1],48+8*BOrt[4],16743936,16743936,image_alpha,image_alpha,24,48+8*BOrt[4]);
DrawCircle(BOrt[0],BOrt[1],48+8*BOrt[4],8404736,8404736,image_alpha,image_alpha,24,8+4*BOrt[4]);
draw_text(BTel[0],BTel[1],"Telúricos");
draw_text(BAst[0],BAst[1],"Asteroides");
draw_text(BGas[0],BGas[1],"Gasosos");
draw_text(BOrt[0],BOrt[1],"Oort");
draw_set_colour(c_white);

draw_primitive_begin(pr_trianglefan);
draw_vertex_colour(0,80,2100224,image_alpha);
draw_vertex_colour(0,0,2100224,image_alpha);
draw_vertex_colour(DW,0,2100224,image_alpha);
draw_vertex_colour(DW,80,2100224,image_alpha);
draw_vertex_colour(DW,112,2100224,0);
draw_vertex_colour(0,112,2100224,0);
draw_primitive_end();

draw_text(DW/2,40,"Este é o Sistema Solar");
draw_set_font(calibri11);
draw_text_ext(DW/2,64,"O Sistema Solar é dividido em cinco partes: o Sol, os Planetas Telúricos, o Cinturão de Asteróides, os Planetas Gasosos e a Nuvem de Oort",16,DW*.8);
draw_set_font(arialbold12);

draw_sprite_ext(spr_back,0,BBack[0],BBack[1],1+BBack[2]/5,1+BBack[2]/5,0,-1,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
