<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
To = -1;

Foco = -1;
Foco_to = -1;
Foco_index = 0;
Foco_b = 0;

ini_open("Salvo.ini");
var c;c[0]=c_gray;c[1]=24704;c[2]=16776863;c[3]=46271;

B[0,0] = background_get_texture(tx_jupiter);
B[0,1] = c[ini_read_real("CONQUISTAS","JÚPITER",0)];
B[0,2] = 0;
B[0,3] = obj_Jupiter;

B[1,0] = background_get_texture(tx_saturno);
B[1,1] = c[ini_read_real("CONQUISTAS","SATURNO",0)];
B[1,2] = 0;
B[1,3] = obj_Saturno;

B[2,0] = background_get_texture(tx_urano);
B[2,1] = c[ini_read_real("CONQUISTAS","URANO",0)];
B[2,2] = 0;
B[2,3] = obj_Urano;

B[3,0] = background_get_texture(tx_netuno);
B[3,1] = c[ini_read_real("CONQUISTAS","NETUNO",0)];
B[3,2] = 0;
B[3,3] = obj_Netuno;

BBack[0] = DW/2;
BBack[1] = DH-48;
BBack[2] = 0;

Camera = ini_cam3d(0,0,0,30,-15,100,6);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cam3d_destroy(Camera);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mx = device_mouse_x_to_gui(0);
var my = device_mouse_y_to_gui(0);
var mj = device_mouse_check_button_pressed(0,mb_left);
var mk = device_mouse_check_button(0,mb_left);

if Foco==-1 {
    Camera[0] = 0;
    Camera[1] = 0;
    Camera[2] = 0;
    Camera[5] = 2500-2500*sqr(1-Foco_index);
} else if Foco==0 {
    var dir = 360/4331*image_index;
    Camera[0] = lengthdir_x(816,dir);
    Camera[1] = lengthdir_y(740,dir);
    Camera[2] = 0;
    Camera[5] = 128-128*sqr(1-Foco_index);
    
    if image_alpha==1&amp;&amp;mj Foco_b=point_in_rectangle(mx,my,176,DH/2-270,304,DH/2-142);
    if Foco_b {
        Foco_b=point_in_rectangle(mx,my,176,DH/2-270,304,DH/2-142)&amp;&amp;mk;
        if!mk {To=jogar_jupiter;Foco_to=-1};
    }
} else if Foco==1 {
    var dir = 360/10759*image_index;
    Camera[0] = lengthdir_x(1513,dir);
    Camera[1] = lengthdir_y(1353,dir);
    Camera[2] = 0;
    Camera[5] = 128-128*sqr(1-Foco_index);
    
    if image_alpha==1&amp;&amp;mj Foco_b=point_in_rectangle(mx,my,160,DH/2-132,288,DH/2-4);
    if Foco_b {
        Foco_b=point_in_rectangle(mx,my,160,DH/2-132,288,DH/2-4)&amp;&amp;mk;
        if!mk {To=jogar_saturno;Foco_to=-1};
    }
} else if Foco==2 {
    var dir = 360/30799*image_index;
    Camera[0] = lengthdir_x(3004,dir);
    Camera[1] = lengthdir_y(2748,dir);
    Camera[2] = 0;
    Camera[5] = 110-110*sqr(1-Foco_index);
    
    if image_alpha==1&amp;&amp;mj Foco_b=point_in_rectangle(mx,my,160,DH/2+4,288,DH/2+132);
    if Foco_b {
        Foco_b=point_in_rectangle(mx,my,160,DH/2+4,288,DH/2+132)&amp;&amp;mk;
        if!mk {To=jogar_urano;Foco_to=-1};
    }
} else if Foco==3 {
    var dir = 360/60190*image_index;
    Camera[0] = lengthdir_x(4540,dir);
    Camera[1] = lengthdir_y(4460,dir);
    Camera[2] = 0;
    Camera[5] = 110-110*sqr(1-Foco_index);
    
    if image_alpha==1&amp;&amp;mj Foco_b=point_in_rectangle(mx,my,176,DH/2+142,304,DH/2+270);
    if Foco_b {
        Foco_b=point_in_rectangle(mx,my,176,DH/2+142,304,DH/2+270)&amp;&amp;mk;
        if!mk {To=jogar_netuno;Foco_to=-1};
    }
}

if B[0,2] {
    B[0,2] = mk&amp;&amp;point_in_circle(mx,my,112,DH/2-206,64);
    if !mk {if Foco==0 Foco_to=-1 else Foco_to=0;PlaySom(sound1,0,VSom,0)}}

if B[1,2] {
    B[1,2] = mk&amp;&amp;point_in_circle(mx,my,96,DH/2-68,64);
    if !mk {if Foco==1 Foco_to=-1 else Foco_to=1;PlaySom(sound1,0,VSom,0)}}

if B[2,2] {
    B[2,2] = mk&amp;&amp;point_in_circle(mx,my,96,DH/2+68,48);
    if !mk {if Foco==2 Foco_to=-1 else Foco_to=2;PlaySom(sound1,0,VSom,0)}}

if B[3,2] {
    B[3,2] = mk&amp;&amp;point_in_circle(mx,my,112,DH/2+206,48);
    if !mk {if Foco==3 Foco_to=-1 else Foco_to=3;PlaySom(sound1,0,VSom,0)}}

if BBack[2] {
    BBack[2] = device_mouse_check_button(0,mb_left)&amp;&amp;point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32);
    if !device_mouse_check_button(0,mb_left) {instance_create(0,0,io_sosy);To=scr_to;PlaySom(sound1,0,VSom,0)}}

if image_alpha==1&amp;&amp;mj {
    if point_in_circle(mx,my,112,DH/2-206,48) B[0,2] = 1;
    if point_in_circle(mx,my,96,DH/2-68,48) B[1,2] = 1;
    if point_in_circle(mx,my,96,DH/2+68,48) B[2,2] = 1;
    if point_in_circle(mx,my,112,DH/2+206,48) B[3,2] = 1;
    if point_in_rectangle(mx,my,BBack[0]-32,BBack[1]-32,BBack[0]+32,BBack[1]+32) BBack[2] = 1;
}

Foco_index = min(Foco_index+.05,1);
image_alpha = min(image_alpha+.05,1);
if Foco_to!=Foco {Foco_index=max(0,Foco_index-.1);
    if Foco_index==0 Foco=Foco_to}
if To!=-1 {image_alpha=max(0,image_alpha-.1);
    if image_alpha==0 {instance_destroy();script_execute(To)}}

cam3d_ctrlscreen(Camera);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha);

if Foco == -1 {
    draw_set_valign(fa_top);
    draw_text(DW-128,32,"Planetas Gasosos");
    draw_set_font(calibri11);
    draw_text_ext(DW-128,64,"Planetas gasosos ou Gigantes Gasosos são planetas de grandes dimensões para diâmetro e massa e que não são principalmente compostos de rocha ou outras matérias sólidas.##Os 4 planetas gasosos do Sistema Solar são Júpiter, Saturno, Urano e Netuno.##A escala da representação ao lado não está de acordo com a realidade*",20,192);
    draw_set_font(arialbold12);
    draw_set_valign(fa_middle);
} else if Foco == 0 {
    draw_set_valign(fa_top);
    draw_text(DW-128,32,"Júpiter");
    draw_set_font(calibri11);
    draw_text_ext(DW-128,64,'Júpiter é o maior planeta do Sistema Solar, tanto em diâmetro quanto em massa, e é o quinto mais próximo do Sol. Possui menos de um milésimo da massa solar, contudo tem 2,5 vezes a massa de todos os outros planetas em conjunto. É um planeta gasoso, junto com Saturno, Urano e Netuno',20,192);
    draw_set_font(arialbold12);
    draw_set_valign(fa_middle);
    draw_set_colour(B[0,1]);
    var xad = 128-128*sqr(1-Foco_index);
    draw_roundrect_ext(48,DH/2-270,176+xad,DH/2-142,128,128,0);
    draw_set_colour(6303488);
    draw_roundrect_ext(48+8,DH/2-270+8,176+xad-8,DH/2-142-8,128,128,0);
    draw_set_colour(B[0,1]);
    draw_set_font(algerian16);
    draw_text(112+xad,DH/2-206,"Jogar");
    draw_set_font(arialbold12);
    draw_set_colour(c_white);
} else if Foco == 1 {
    draw_set_valign(fa_top);
    draw_text(DW-128,32,"Saturno");
    draw_set_font(calibri11);
    draw_text_ext(DW-128,64,'Saturno é o sexto planeta a partir do Sol e o segundo maior do Sistema Solar. Pertencente ao grupo dos gigantes gasosos, possui cerca de 95 massas terrestres e orbita a uma distância média de 9,5 unidades astronômicas',20,192);
    draw_set_font(arialbold12);
    draw_set_valign(fa_middle);
    draw_set_colour(B[1,1]);
    var xad = 128-128*sqr(1-Foco_index);
    draw_roundrect_ext(32,DH/2-132,160+xad,DH/2-4,128,128,0);
    draw_set_colour(6303488);
    draw_roundrect_ext(32+8,DH/2-132+8,160+xad-8,DH/2-4-8,128,128,0);
    draw_set_colour(B[1,1]);
    draw_set_font(algerian16);
    draw_text(80+xad,DH/2-68,"Jogar");
    draw_set_font(arialbold12);
    draw_set_colour(c_white);
} else if Foco == 2 {
    draw_set_valign(fa_top);
    draw_text(DW-128,32,"Urano");
    draw_set_font(calibri11);
    draw_text_ext(DW-128,64,'Urano é o sétimo planeta a partir do Sol, o terceiro maior e o quarto mais massivo dos oito planetas do Sistema Solar. Foi nomeado em homenagem ao deus grego do céu, Urano, o pai de Cronos e o avô de Zeus',20,192);
    draw_set_font(arialbold12);
    draw_set_valign(fa_middle);
    draw_set_colour(B[2,1]);
    var xad = 128-128*sqr(1-Foco_index);
    draw_roundrect_ext(32,DH/2+4,160+xad,DH/2+132,128,128,0);
    draw_set_colour(6303488);
    draw_roundrect_ext(32+8,DH/2+4+8,160+xad-8,DH/2+132-8,128,128,0);
    draw_set_colour(B[2,1]);
    draw_set_font(algerian16);
    draw_text(80+xad,DH/2+68,"Jogar");
    draw_set_font(arialbold12);
    draw_set_colour(c_white);
} else if Foco == 3 {
    draw_set_valign(fa_top);
    draw_text(DW-128,32,"Netuno");
    draw_set_font(calibri11);
    draw_text_ext(DW-128,64,'Netuno ou Neptuno é o oitavo planeta do Sistema Solar, o último a partir do Sol desde a reclassificação de Plutão para a categoria de planeta anão, em 2006. Pertencente ao grupo dos gigantes gasosos, possui um tamanho ligeiramente menor que o de Urano, mas maior massa, equivalente a 17 massas terrestres',20,192);
    draw_set_font(arialbold12);
    draw_set_valign(fa_middle);
    draw_set_colour(B[3,1]);
    var xad = 128-128*sqr(1-Foco_index);
    draw_roundrect_ext(48,DH/2+142,176+xad,DH/2+270,128,128,0);
    draw_set_colour(6303488);
    draw_roundrect_ext(48+8,DH/2+142+8,176+xad-8,DH/2+270-8,128,128,0);
    draw_set_colour(B[0,1]);
    draw_set_font(algerian16);
    draw_text(112+xad,DH/2+206,"Jogar");
    draw_set_font(arialbold12);
    draw_set_colour(c_white);
}

draw_sprite_ext(spr_home,0,BBack[0],BBack[1],1+BBack[2]/5,1+BBack[2]/5,0,-1,image_alpha);

if Foco!=0 DrawCircle(112,DH/2-206,64,B[0,1],B[0,1],image_alpha-B[0,2]/2,image_alpha-B[0,2]/2,24,8);
if Foco!=1 DrawCircle(96,DH/2-68,64,B[1,1],B[1,1],image_alpha-B[1,2]/2,image_alpha-B[1,2]/2,24,8);
if Foco!=2 DrawCircle(96,DH/2+68,64,B[2,1],B[2,1],image_alpha-B[2,2]/2,image_alpha-B[2,2]/2,24,8);
if Foco!=3 DrawCircle(112,DH/2+206,64,B[3,1],B[3,1],image_alpha-B[3,2]/2,image_alpha-B[3,2]/2,24,8);

dra_planet(112,DH/2-206,56,1,image_index,3,B[0,0]);
dra_planet(96,DH/2-68,56,1,image_index,27,B[1,0]);
dra_planet(96,DH/2+68,56,1,image_index,98,B[2,0]);
dra_planet(112,DH/2+206,56,1,image_index,28,B[3,0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cam3d_set_projection(Camera);
draw_set_colour(c_gray);
ss3dview_sol(256);
ss3dview_jupiter(image_index);
ss3dview_saturno(image_index);
ss3dview_urano(image_index);
ss3dview_netuno(image_index);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
